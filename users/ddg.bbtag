{//;show help if no arguments are given}
{if;{argslength};==;0;
  {embed;{embedbuild;
    title:{prefix} {commandname};
    color:de5833;
    description:**Usage**: `{prefix} {commandname} [search query]`
    Search the web using DuckDuckGo.
    Returns an instant answer if one is found, and a link result otherwise.;}}
  {return}}

{//;set branding}
{set;~logo;https://ibin.co/4FhB45zSNori.png}
{set;~ddgcolor;de5833}
{set;~errorcolor;7a301c}

{//;function to edit url embeds into fancy embeds}
{function;embedfromurl;
  {//;send message}
  {set;~msgid;{send;{channelid};{get;~redirecturl}}}
  {//;sleep so discord can actually embed the url above}
  {sleep;3s}
  {//;use {messageembeds} to find embedded elements from message above and store them}
  {set;~title;{jget;{messageembeds;{get;~msgid}};0.title}}
  {set;~url;{jget;{messageembeds;{get;~msgid}};0.url}}
  {set;~thumbnail;{jget;{messageembeds;{get;~msgid}};0.thumbnail.url}}
  {set;~desc;{jget;{messageembeds;{get;~msgid}};0.description}}
  {//;detect if elements not found and set them to something}
  {if;{get;~desc};startswith;`Cannot read property;{set;~desc;}}
  {if;{get;~title};startswith;`Cannot read property;{set;~title;Result for '{args}'}}
  {if;{get;~title};startswith;index.php;{set;~title;Result for '{args}'}}
  {if;{get;~thumbnail};startswith;`Cannot read property;{set;~thumbnail;{get;~logo}}}
  {if;{get;~url};startswith;`Cannot read property;{set;~url;{get;~redirecturl}}}
  {//;last-ditch title backup because discord is weird}
  {if;{get;~title};==;;{set;~title;Result for '{args}'}}
  {//;edit message above into embed with ddg info}
  {edit;{channelid};{get;~msgid};{space};{embedbuild;
    title:{get;~title};
    color:{get;~ddgcolor};
    url:{get;~url};
    thumbnail.url:{get;~thumbnail};
    description:{get;~desc};
    footer.icon_url:{get;~logo};
    footer.text:Result via DuckDuckGo / {get;~url}}}}

{//;encode arguments}
{set;~query;{uriencode;{args}}}

{//;decode response because it's in base64 for some reason}
{set;~response;{base64decode;{jget;{request;https://api.duckduckgo.com/?q={get;~query}&o=json&no_redirect=1};body}}}

{//;get title of result}
{set;~title;{jget;{get;~response};Heading}}

{//;try to get answer}
{set;~desc;{jget;{get;~response};Answer}}

{//;if there is no answer, try to get abstract}
{if;{get;~desc};==;;
  {set;~desc;{jget;{get;~response};Abstract}}
  {set;~source;{jget;{get;~response};AbstractURL}}}

{//;fall back to url if there is no description}
{if;{get;~desc};==;;
  {//;if bangs are used there should be a redirect link}
  {if;{jget;{get;~response};Redirect};!=;;
    {set;~redirecturl;{jget;{get;~response};Redirect}}
    {//;fancy embed}
    {func.embedfromurl}
    {return};
    {//;otherwise use the empty bang "! " which gives a redirect to the first url}
    {set;~redirecturl;{jget;{base64decode;{jget;{request;https://api.duckduckgo.com/?q=! {get;~query}&o=json&no_redirect=1};body}};Redirect}}
    {//;use direct links for youtube so videos can play inline, otherwise embed}
    {if;{get;~redirecturl};startswith;https://www.yout;
      Result via DuckDuckGo: {get;~redirecturl};
      {func.embedfromurl}}
    {return}}}

{//;get image if there is one}
{set;~thumbnail;{jget;{get;~response};Image}}

{//;set url}
{if;{length;{jget;{get;~response};Results}};>;0;
  {if;{jget;{get;~response};Results.0.FirstURL};!=;;
    {//;if there are results and a valid url, use that}
    {set;~url;{jget;{get;~response};Results.0.FirstURL}};
    {//;otherwise use the abstract url if it exists}
    {if;{jget;{get;~response};AbstractURL};!=;;
      {set;~url;{jget;{get;~response};AbstractURL}}}};
  {//;if there are no results use the abstract url if it exists}
  {if;{jget;{get;~response};AbstractURL};!=;;
    {set;~url;{jget;{get;~response};AbstractURL}}}}

{//;set attribution}
{if;{get;~source};!=;;
  {set;~source;Result via DuckDuckGo / {get;~source}};
  {set;~source;Result via DuckDuckGo}}

{//;set default variables if none exist}
{if;{get;~title};==;;{set;~title;Result for '{args}'}}
{if;{get;~url};==;;{set;~url;https://duckduckgo.com/?q={get;~query}}}
{if;{get;~thumbnail};==;;{set;~thumbnail;{get;~logo}}}
{if;{get;~desc};==;;{set;~desc;}}

{//;display results, use thumbnail if one exists}
{embed;{embedbuild;
  title:{get;~title};
  color:{get;~ddgcolor};
  url:{get;~url};
  thumbnail.url:{get;~thumbnail};
  description:{get;~desc};
  footer.icon_url:{get;~logo};
  footer.text:{get;~source};}}